<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_ctrl_render</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
obj_ctrl_render, by BPzeBanshee

At last, a modern render system that doesn't chew up a
stupid amount of performance in the process of handling surfaces!

This render system's end result is designed to be very similar to that
of Blue Revolver's video options: free control of the game scale and
rotation without GM's stupid view_angle glitches while looking pretty.
*/
// Define base resolution (modify event_user(0)'s smaller entries if changing this though)
m_base_w = 240;
m_base_h = 320;
window_set_min_width(m_base_w);
window_set_min_height(m_base_h);
application_surface_draw_enable(false);
surface_resize(application_surface,m_base_w,m_base_h);

// Define configurable variables
m_aspect = global.window_aspect;    // aspect ratio, 0=3:4 (native), 1=4:3, 2=16:9, 3=16:10
m_size = global.window_size;        // selector var for resolution list (see event_user(0))
m_angle = global.rotation;          // angle of screen in degrees
m_clean = global.scaling;           // proportional or clean scale
m_wallpaper = global.use_wallpaper; // draw wallpaper (y/n)?
event_user(1);

// Define self-configured variables
l_scale = 1;  // automatically calculated in step
l_delay = 0; // masks funny behaviour while changing window size
l_res = "";

event_user(0); // set window size according to selected resolution
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>texture_set_interpolation(global.filter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if l_delay &gt; 0 then l_delay -= 1;

if m_size != global.window_size 
or m_aspect != global.window_aspect 
then event_user(0);

if window_get_width() != browser_width
|| window_get_height() != browser_height-4
then event_user(0);

/*
if !global.fullscreen
then if window_get_width() != m_array_w[m_aspect,m_size]
|| window_get_height() != m_array_h[m_aspect,m_size] 
then event_user(0);
*/
// DEBUG COMMANDS
/*
// Adjust angle as needed (no more view_angle!)
if keyboard_check_pressed(ord("Q")) 
    {
    m_angle -= 90; if m_angle &lt; 0 then m_angle = 270;
    }
if keyboard_check_pressed(ord("E")) 
    {
    m_angle += 90; if m_angle &gt; 270 then m_angle = 0;
    }

// Set scaling to clean or proportional
if keyboard_check_pressed(ord("R")) then m_clean = !m_clean;

// Set window size according to aspect ratio size and update window
if keyboard_check_pressed(ord("T"))
    {
    m_size += 1;
    if m_size &gt; l_max_size then m_size = 0;
    event_user(0);
    }
    
// Set aspect ratio and update window
if keyboard_check_pressed(ord("Y"))
    {
    m_aspect += 1;
    if m_aspect &gt; 3 then m_aspect = 0;
    event_user(0);
    }
    
// Toggle Wallpaper
if keyboard_check_pressed(ord("U")) then m_wallpaper = !m_wallpaper;
*/

/// Update x/y and scale size
// Adjust scale as needed (no more viewports, hooray!)
m_angle = global.rotation;
m_clean = global.scaling;
//m_wallpaper = global.use_wallpaper;
if m_angle = 90 || m_angle = 270
then l_scale = min(window_get_width()/m_base_h,window_get_height()/m_base_w)
else l_scale = min(window_get_width()/m_base_w,window_get_height()/m_base_h);
if m_clean then l_scale = max(1,floor(l_scale));

// Offset x/y for centering the drawn surface
x = round(window_get_width()/2);
y = round(window_get_height()/2);
xx = x - lengthdir_x((m_base_w/2)*l_scale,m_angle) - lengthdir_x((m_base_h/2)*l_scale,m_angle+270);
yy = y - lengthdir_y((m_base_w/2)*l_scale,m_angle) - lengthdir_y((m_base_h/2)*l_scale,m_angle+270);

/*if os_browser != browser_not_a_browser
    {
    if browser_height &gt; window_get_height() || browser_width &gt; window_get_width()
        {
        var wx, wy;
        if browser_width &gt; window_get_width()
        then wx = (browser_width - window_get_width()) / 2
        else wx = 0;
        if browser_height &gt; window_get_height()
        then wy = (browser_height - window_get_height()) / 2
        else wy = 0;
        window_set_position(wx,wy);
        }
    }*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update xview/yview globalvars
globalvar xview,yview;
xview = view_xview[0];
yview = view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Window size according to aspect etc

// First, update the maximum array iteration size
m_aspect = global.window_aspect;
l_max_size = (browser_height / m_base_h);
if m_clean then l_max_size = floor(l_max_size);
m_size = min(global.window_size,l_max_size);
if global.window_size &gt; l_max_size then global.window_size = l_max_size;

// Then pluck the array variables and adjust window size accordingly
var w,h;
w = max(240,browser_width);
h = max(320,browser_height - 4);
//w = clamp(m_base_w * m_size,m_base_w,browser_width);
//h = clamp(m_base_h * m_size,m_base_h,browser_height - 4);
window_set_size(w,h);
l_res = "WEB ("+string(w)+"x"+string(h)+")";
l_delay = 0;

// Restore filter use if applicable
alarm[1] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if l_delay &gt; 0 then exit;
draw_set_alpha(1);

if m_wallpaper &amp;&amp; (m_aspect &gt; 0 || (m_aspect = 0 &amp;&amp; (m_angle = 90 || m_angle = 270)))
    {
    draw_background_stretched(bkg_wallpaper,0,0,window_get_width(),window_get_height());
    draw_sprite_ext(spr_outline,0,x,y,l_scale,l_scale,m_angle,c_white,1);
    }

draw_set_blend_mode_ext(bm_one,bm_zero);
draw_surface_ext(application_surface,xx,yy,l_scale,l_scale,m_angle,c_white,1);
draw_set_blend_mode(bm_normal);

/*scr_draw_vars(global.fnt_little,fa_right,c_black);
var s1 = "Win. Size: "+string(window_get_width())+"x"+string(window_get_height());
var s2 = "GUI. Size: "+string(display_get_width())+"x"+string(display_get_height());
draw_rectangle(window_get_width()-string_width(s1),0,window_get_width(),12,0);
draw_set_color(c_white);
draw_text(window_get_width(),0,s1);
draw_text(window_get_width(),12,s2);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
