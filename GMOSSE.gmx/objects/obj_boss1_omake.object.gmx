<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss1_omake</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_en_air</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* |&lt;||_|_3R &lt;|_0\/\/|\| */
// Compulsory (health, z-handling, etc)
enemyHP = 1200; 
event_inherited();
timeout = 1200;
can_damage = 0;

// Enemy behaviour
phase = 0; count = 0;
atk_timer = 0;
thr_timer = 0;
direction = 90;
image_alpha = 0;

with obj_ctrl_music event_user(11);
scr_create_healthbar();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_fade)
then scr_fademusic(0.005);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* AESTHETICS */
// Sprite movement/transparency
image_angle += 1;
if image_alpha &lt; 1 then image_alpha += 0.025;

// Thrust
thr_timer += 1;
if thr_timer = 4
    {
    thr1 = scr_basicshot(x,y,obj_explosion,random(6),direction+180-45+random_range(-20,20));
    thr2 = scr_basicshot(x,y,obj_explosion,random(6),direction+180+45+random_range(-20,20));
    thr1.depth = depth + 1;
    thr2.depth = depth + 1;
    thr1.image_xscale = 0.75;
    thr1.image_yscale = 0.75;
    thr2.image_xscale = 0.75;
    thr2.image_yscale = 0.75;
    thr1.image_alpha = image_alpha;
    thr2.image_alpha = image_alpha;
    thr_timer = 0;
    }

// Background speed
if background_vspeed[0] &gt; -1 then background_vspeed[0] -= 0.05;

/* BEHAVIOUR */
enemyHP = timeout;
if instance_exists(obj_hitbox)
    {
    tar = instance_nearest(x,y,obj_hitbox);
    aim = point_direction(x,y,tar.x,tar.y);
    }
atk_timer += 1;
switch phase
    {
    case 0: // Intro
        {
        if atk_timer = 90 then vspeed = -1;
        if y &lt;= yview+sprite_height
            {
            vspeed = 0;
            hspeed = -1;
            phase = 1;
            }
        break;
        }
    case 1: // Main Phase
        {
        // Score
        if instance_exists(obj_player) then scr_addscore(1000,0,0); // no logging
        
        // Movement
        if x &lt;= 40+sprite_width &amp;&amp; hspeed &lt; 0
            {
            hspeed = 0;
            vspeed = 1;
            }
        if y &gt;= yview+320-sprite_height &amp;&amp; vspeed &gt; 0
            {
            vspeed = 0;
            hspeed = 1;
            }
        if x &gt;= 280-sprite_width &amp;&amp; hspeed &gt; 0
            {
            hspeed = 0;
            vspeed = -1;
            }
        if y &lt;= yview+sprite_width &amp;&amp; vspeed &lt; 0
            {
            vspeed = 0;
            hspeed = -1;
            }
        
        
        if atk_timer &gt;= 263//262.74 //32.34
            {
            // Attack 2
            count += 1;
            if count &gt;= 17 then count = 9;
            if count = 9 || count &gt;= 15
                {
                for (i=2;i&lt;=6;i+=1) 
                    {
                    scr_basicshot(x,y,obj_bullet2,i,image_angle);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+45);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+90);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+135);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+180);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+225);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+270);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+315);
                    }
                scr_playsnd(snd_en_shot2,1);
                }
            else
                {
                 // Attack 1
                scr_playsnd(snd_en_shot1,1);
                for (i=2;i&lt;=7;i+=1) {scr_basicshot(x,y,obj_bullet1,i,aim);}
                }
                
            atk_timer = 230;//.4;
            }  
            
        // Attack 2
        /*switch atk2_timer
            {
            case 525://525.42
            case 724://723.54
            case 756://755.88
                {
                for (i=2;i&lt;=6;i+=1) 
                    {
                    scr_basicshot(x,y,obj_bullet2,i,image_angle);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+45);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+90);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+135);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+180);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+225);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+270);
                    scr_basicshot(x,y,obj_bullet2,i,image_angle+315);
                    }
                scr_playsnd(snd_en_shot2,1);
                break;
                }
            case 787: atk2_timer = 524; break;//787.56
            }*/

        timeout -= 1;
        //enemyHP = timeout;
        if timeout &lt;= 0 then phase = 2;
        break;
        }
    case 2: // Time Out
        {
        hspeed = 0;
        vspeed -= 0.1;
        if y &lt; yview-(sprite_width/2) then instance_destroy();
        break;
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
