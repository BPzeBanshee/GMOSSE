<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_xono</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Variables that are used in the step function need to be called here
and assigned a variable first. 
*/
/* WEAPON/TIMER VARS */
shot_angle = 0;
shot_angle_add = 0;
shot_anim = 0;

lsr_timer = 0;
bomb_timer = 0;

/* SPEED VARS */
global.shipspeed = 5; 
global.slowshipspeed = 3;

/* AESTHETIC VARS */
if global.xonospr = 2 then sprite_index = spr_xono_v2;
if global.xonospr = 3 
    {
    sprite_index = spr_xono_v3;
    image_speed = 0.33;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* COMPUSLORY EVENT */
event_inherited();

/* TIMERS */
if lsr_timer &gt; 0 then lsr_timer -= 1;
if bomb_timer &gt; 0 then bomb_timer -= 1;

/* BUTTON 1 - SHOT/MISSILE */
if (global.button1) 
    {
    // shot
    scr_playsnd(snd_xono_shot,0); 
    shot = scr_basicshot(x,y,obj_xono_shot,20,90+shot_angle);
    shot.image_index = shot_anim;
    
    // anim frame for shot (aesthetics)
    shot_anim += 0.5;
    if shot_anim &gt; 4 then shot_anim = 0;
    
    // angle for shot
    if shot_angle_add = 1 then shot_angle += 1 else shot_angle -= 1;
    if shot_angle &gt; 5 || shot_angle &lt; -5
        {
        shot_angle = 0; 
        shot_angle_add += 1;
        if shot_angle_add &gt; 1 then shot_angle_add = 0;
        }
        
    // laser
    if lsr_timer = 0 &amp;&amp; instance_number(obj_xono_laser) &lt; 4
        {
        scr_basicshot(x,y,obj_xono_laser,8,direction+45);
        scr_basicshot(x,y,obj_xono_laser,8,direction+135);
        scr_basicshot(x,y,obj_xono_laser,8,direction+225);
        scr_basicshot(x,y,obj_xono_laser,8,direction+315);
        lsr_timer = 30;
        }
    }

/* BUTTON 2 - BOMB */
if (global.button2) &amp;&amp; bomb_timer = 0 &amp;&amp; global.bombs &gt; 0
    {
    scr_playsnd(snd_exp1,0);
    scr_circleshot02(15,x,y,0,obj_xono_bomb,6,false);
    
    bomb_timer = 60;
    global.bombs -= 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
