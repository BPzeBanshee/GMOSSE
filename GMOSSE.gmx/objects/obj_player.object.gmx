<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Don't bother doing anything if we're not actually playing
if !instance_exists(obj_hitbox) then exit;

// Check for inputs
scr_input();
    
// Establishes border variables   
x_l_diff = xview + 16;
x_r_diff = xview + 240-16;
y_u_diff = yview + 16;
y_d_diff = yview + 320-16;

// This keeps the player within the view.
if obj_hitbox.y &gt;= y_d_diff then y = y_d_diff;
if obj_hitbox.y &lt;= y_u_diff then y = y_u_diff;
if obj_hitbox.x &gt;= x_r_diff then x = x_r_diff;
if obj_hitbox.x &lt;= x_l_diff then x = x_l_diff;

// This gets the value that we're going to move the player
// ship around by. The global vars are set in the player
// ship's Create event.
// We also create the afterimage "focus" effect here
// as the slowdown button is checked here.
var spd,d_spd;
if global.button3
    {
    instance_create(x,y,obj_afterimage);
    spd = global.slowshipspeed;
    d_spd = global.sldiagspeed;
    }
else
    {
    spd = global.shipspeed;
    d_spd = global.diagspeed;
    }
    
// Finally, the actual joystick/gamepad/arrow key
// inputs. We check what's pressed first, then
// check if the hitbox is within the appropriate
// boundaries, and then we move using the speed
// vars we made earlier.

// Down
if (global.jdown &amp;&amp; !global.jleft &amp;&amp; !global.jright)
    {
    if (obj_hitbox.y &lt; y_d_diff) then y += spd;
    }

// Down-Left
if (global.jdown &amp;&amp; global.jleft &amp;&amp; !global.jup &amp;&amp; !global.jright)
    {
    if (obj_hitbox.y &lt; y_d_diff) then y += d_spd;
    if (obj_hitbox.x &gt; x_l_diff) then x -= d_spd;
    }
 
// Down-Right
if (global.jdown &amp;&amp; global.jright &amp;&amp; !global.jup &amp;&amp; !global.jleft)
    {
    if (obj_hitbox.y &lt; y_d_diff) then y += d_spd;
    if (obj_hitbox.x &lt; x_r_diff) then x += d_spd;
    }
 
// Up
if (global.jup &amp;&amp; !global.jleft &amp;&amp; !global.jright)
    {
    if (obj_hitbox.y &gt; y_u_diff) then y -= spd;
    }
  
// Up-Left
if (global.jup &amp;&amp; global.jleft &amp;&amp; !global.jdown &amp;&amp; !global.jright)
    {
    if (obj_hitbox.y &gt; y_u_diff) then y -= d_spd;
    if (obj_hitbox.x &gt; x_l_diff) then x -= d_spd; 
    }
 
// Up-Right
if (global.jup &amp;&amp; global.jright &amp;&amp; !global.jdown &amp;&amp; !global.jleft)
    {
    if (obj_hitbox.y &gt; y_u_diff) then y -= d_spd;
    if (obj_hitbox.x &lt; x_r_diff) then x += d_spd;
    }
 
// Left
if (global.jleft &amp;&amp; !global.jup &amp;&amp; !global.jdown)
    {
    if (obj_hitbox.x &gt; x_l_diff) then x -= spd;
    }
 
// Right
if (global.jright &amp;&amp; !global.jup &amp;&amp; !global.jdown)
    {
    if (obj_hitbox.x &lt; x_r_diff) then x += spd;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
