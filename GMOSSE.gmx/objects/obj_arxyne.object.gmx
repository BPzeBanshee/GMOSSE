<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arxyne</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Weapon/Bomb variable handling
shot1_timer = 0;
shot2_timer = 0;
shot3_timer = 0;
bomb_timer = 0;

global.shipspeed = 2; // move speed
global.slowshipspeed = 2; // slow move speed

if global.arxynespr = 2 then sprite_index = spr_arxyneV2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// TIMERS
if shot1_timer &gt; 0 then shot1_timer -= 1;
if shot2_timer &gt; 0 then shot2_timer -= 1;
if shot3_timer &gt; 0 then shot3_timer -= 1;
if bomb_timer &gt; 0 then bomb_timer -= 1;

// BUTTON 1 - MAIN SHOT
if (global.button1)
    {
    // MAIN SHOT
    if shot1_timer = 0
        {
        scr_playsnd(snd_arx_shot1,0);
        scr_basicshot(x+6,y,obj_arxyne_shot,15,85);
        scr_basicshot(x-6,y,obj_arxyne_shot,15,95);
        scr_basicshot(x+6,y+4,obj_arxyne_shot,15,65);
        scr_basicshot(x-6,y+4,obj_arxyne_shot,15,115);
        shot1_timer = 5;
        }
        
    // CENTER SHOT
    if shot2_timer = 0
        {
        for (i=y; i&gt;yview-16;i-=32) instance_create(x,i,obj_arxyne_bolt);
        //scr_basicshot(x,y,obj_arxyne_shot,16,90);
        shot2_timer = 32;
        }
        
    // HOMING LASERS
    if shot3_timer = 0 &amp;&amp; instance_number(obj_arxyne_shot2a) &lt; 3//5
        {
        scr_playsnd(snd_arx_shot2,0);
        //scr_basicshot(x,y+12,obj_arxyne_shot2a,5,230);
        //scr_basicshot(x,y+12,obj_arxyne_shot2a,5,260);
        scr_basicshot(x,y+12,obj_arxyne_shot2a,5,230);
        scr_basicshot(x,y+12,obj_arxyne_shot2a,5,310);
        shot3_timer = 45;
        }
    }
    
/* BUTTON 2 - BOMB */
if (global.button2) &amp;&amp; bomb_timer = 0 &amp;&amp; global.bombs &gt; 0
    {
    scr_playsnd(snd_exp1,0);
    scr_circleshot02(15,x,y,0,obj_xono_bomb,6,false);
    bomb_timer = 60;
    global.bombs -= 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
