<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_trident</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Weapon Variables
shot_timer = 0;
bomb_timer = 0;

// Movement Speed
global.shipspeed = 4; 
global.slowshipspeed = 2; // When Button 3 is pressed

// Misc. Variables
img = 2;
img_bank_spd = 0.2;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Compulsory Parent/Child Functions
event_inherited();

// Weapon Timers
if shot_timer &gt; 0 then shot_timer -= 1;
if bomb_timer &gt; 0 then bomb_timer -= 1;

// Button 1 Event
if (global.button1)
    { 
    if shot_timer = 0 &amp;&amp; !instance_exists(obj_sf_bomb)
        {
        scr_playsnd(snd_sf_shot,1);
        shot1 = instance_create(x,y,obj_sf_shot);
        shot1.direction = 90;
        lshot1 = instance_create(x-2,y,obj_sf_shot);  
        lshot2 = instance_create(x-4,y,obj_sf_shot);
        rshot1 = instance_create(x+2,y,obj_sf_shot);
        rshot2 = instance_create(x+4,y,obj_sf_shot);
        if (global.button3)
            {
            lshot1.direction = 60;
            lshot2.direction = 50;
            rshot1.direction = 120;
            rshot2.direction = 130;
            }
        else
            {
            lshot1.direction = 50;
            lshot2.direction = 30;
            rshot1.direction = 130;
            rshot2.direction = 150;
            }
        shot_timer = 8;
        }
    }
    
// Button 2 Event
if (global.button2)
    {
    if bomb_timer = 0 &amp;&amp; global.bombs &gt; 0
        {
        instance_create(x,y-20,obj_sf_bomb);
        global.bombs -= 1;
        bomb_timer = 240;
        }
    }
    
// Image Aesthetics  
image_index = round(img);
if (global.jleft &amp;&amp; img &gt; 0) then img -= img_bank_spd;
if (global.jright &amp;&amp; img &lt; 4) then img += img_bank_spd;
if (!global.jleft &amp;&amp; !global.jright)
    {
    if img &gt; 2 then img -= img_bank_spd;
    if img &lt; 2 then img += img_bank_spd;
    }
// This code works with keyboard but not touch controls, odd
/*
if (x &lt; xprevious &amp;&amp; img &gt; 0) then img -= 0.25;
if (x &gt; xprevious &amp;&amp; img &lt; 4) then img += 0.25;
if (x = xprevious)
    {
    if img &gt; 2 then img -= 0.25;
    if img &lt; 2 then img += 0.25;
    }*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
