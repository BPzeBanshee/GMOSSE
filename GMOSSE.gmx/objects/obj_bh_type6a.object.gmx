<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bh_orb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_bh_orb</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

size = 1;
length = 9;
qqx = ds_queue_create();
qqy = ds_queue_create();
new_x = 0;
new_y = 0;
moving = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_player)
    {
    if (global.jdown||global.jup||global.jleft||global.jright) 
    &amp;&amp; !global.button2
    then moving = 1
    else moving = 0;

    if (global.jdown &amp;&amp; global.jup) 
    || (global.jleft &amp;&amp; global.jright) 
    then moving = 0;

    if global.button2 &amp;&amp; !hook
        {
        program = !program;
        hook = 1;
        }
    if !global.button2 then hook = 0;
    
    if program = 1 then moving = 2;
        
    if moving &gt; 0
        {
        ds_queue_enqueue(qqx,obj_player.x); 
        ds_queue_enqueue(qqy,obj_player.y);
        if moving = 1
            {
            new_x = obj_player.x - ds_queue_head(qqx);
            new_y = obj_player.y - ds_queue_head(qqy);
            }
        size += 1;
        }
        
    if moving = 2
        {
        x = obj_player.x-new_x;
        y = obj_player.y-new_y;
        }
        
    if size &gt;= length
        {
        if moving = 1 
            {
            x = ds_queue_head(qqx); 
            y = ds_queue_head(qqy);
            }
        ds_queue_dequeue(qqx); 
        ds_queue_dequeue(qqy);
        size -= 1;
        }
    }
else instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
