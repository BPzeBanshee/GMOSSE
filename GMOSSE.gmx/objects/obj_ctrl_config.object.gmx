<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99998</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enabled = 0;
hook = 1;

category = 0;
selection = 1;
warning = "";
max_h = 0;
timer = 0;

if room = rm_menu then b = c_black
else b = make_color_rgb(50,50,50);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_ctrl_menu) then obj_ctrl_menu.enabled = 1;
if instance_exists(obj_ctrl_pause) then obj_ctrl_pause.enabled = 1;
scr_config_save("config.ini");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hack to respond reliably when in fullscreen mode
scr_pickmusicini();
with obj_ctrl_filter alarm[1] = 1; // return to whatever fullscreen it was before
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// MENU BEHAVIOUR (PER MODE)
event_user(category);
enabled = 1;

// UP
if global.jup &amp;&amp; !hook
    {
    scr_playsnd(snd_click,0);
    hook = 1;
    selection -= 1;
    if selection &lt; 1 then selection = selection_max;
    }
    
// DOWN
if global.jdown &amp;&amp; !hook
    {
    scr_playsnd(snd_click,0);
    hook = 1;
    selection += 1;
    if selection &gt; selection_max then selection = 1;
    }

// HOOK
if !global.button1 &amp;&amp; !global.jup &amp;&amp; !global.jdown
&amp;&amp; !global.jleft &amp;&amp; !global.jright then hook = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MISC. SETTINGS MENU

// BEHAVIOUR
category_type = "[MISC]";
selection_max = 5; // amount of positions in the submenu
max_h = 30;
if timer &gt; 0 then timer -= 1;

// LEFT
if global.jleft &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: global.debug = 0; break;
        case 2: global.fonttype = 0; scr_fonts_set(); break;
        case 3: if global.bulletcolour &gt; 1 then global.bulletcolour -= 1;  break;
        }
    }
    
// RIGHT
if global.jright &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: global.debug = 1; break;
        case 2: global.fonttype = 1; scr_fonts_set(); break;
        case 3: if global.bulletcolour &lt; 3 then global.bulletcolour += 1;  break;
        }
    }
    
// BUTTON 1
if global.button1 &amp;&amp; !hook 
    {
    hook = 1;
    scr_playsnd(snd_click,1);
    switch selection
        {
        case 4:
            {
            timer = 90;
            scr_hiscore_reset();
            scr_hiscore_save("score.gmes");
            break;
            }
        case 5:
            {
            timer = 0;
            selection = 1; 
            category = 0;
            break;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// VOLUME OPTIONS MENU

// BEHAVIOUR
category_type = "[AUDIO]";
selection_max = 5; // amount of positions in the submenu
max_h = 0;

// LEFT
if global.jleft &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: if global.music_volume &gt; 0 then global.music_volume -= 10; break;
        case 2: if global.sfx_volume &gt; 0 then global.sfx_volume -= 10; break;
        case 3: if global.voice_volume &gt; 0 then global.voice_volume -= 10; break;
        }
    with obj_ctrl_music scr_setvolmusic(music);
    scr_setvolsnd();    
    }
    
// RIGHT
if global.jright &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: if global.music_volume &lt; 100 then global.music_volume += 10; break;
        case 2: if global.sfx_volume &lt; 100 then global.sfx_volume += 10; break;
        case 3: if global.voice_volume &lt; 100 then global.voice_volume += 10; break;
        }
    with obj_ctrl_music scr_setvolmusic(music);
    scr_setvolsnd();
    }
    
// BUTTON 1
if global.button1 &amp;&amp; !hook 
    {
    hook = 1;
    scr_playsnd(snd_click,1);
    switch selection
        {
        case 4:
            {
            // Hack to allow time to respond to window change
            if global.fullscreen then window_set_fullscreen(0);
            alarm[0]=2;
            break;
            }
        case 5:
            {
            selection = 1; 
            category = 0;
            break;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// VIDEO OPTIONS MENU


// BEHAVIOUR
category_type = "[VIDEO]";
selection_max = 10; // amount of positions in the submenu
max_h = 35;

if selection = 7 then warning = "PERFORMANCE INTENSIVE,
USE WITH CAUTION."
else warning = "";

// LEFT
if global.jleft &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: 
            {
            global.fullscreen = 0; 
            window_set_fullscreen(global.fullscreen); 
            break;
            }
        case 2: 
            {
            if global.win_size &gt; 1 
                {
                global.win_size -= 1; 
                scr_view_update();
                } 
            break;
            }
        case 3: 
            {
            global.tate -= 1; 
            if global.tate &lt; 0 then global.tate = 3; 
            scr_view_update(); 
            break;
            }
        case 4: 
            {
            global.scanlines -= 1; 
            if global.scanlines &lt; 0 then global.scanlines = 2; 
            scr_scanline(global.scanlines);
            break;
            }
        case 5: 
            {
            global.filter = 0; 
            texture_set_interpolation(global.filter); 
            break;
            }
        case 6: 
            {
            global.vsync = 0; 
            scr_setdisplay(global.aa,global.vsync); 
            with obj_ctrl_filter alarm[0] = 1;
            break;
            }
        case 7: 
            {
            if global.aa &gt; 0 then global.aa -= 1; 
            scr_setdisplay(global.aa,global.vsync); 
            with obj_ctrl_filter alarm[0] = 1;
            break;
            }
        case 8: global.hitbox_visible = 0; break;
        case 9: global.flicker = 0; break; 
        }
    }
    
// RIGHT
if global.jright &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: 
            {
            global.fullscreen = 1;
            window_set_fullscreen(global.fullscreen); 
            break;
            }
        case 2: 
            {
            if global.win_size &lt; 3 
                {
                global.win_size += 1; 
                scr_view_update();
                } 
            break;
            }
        case 3: 
            {
            global.tate += 1; 
            if global.tate &gt; 3 then global.tate = 0; 
            scr_view_update(); 
            break;
            }
        case 4:
            { 
            global.scanlines += 1; 
            if global.scanlines &gt; 2 then global.scanlines = 0; 
            scr_scanline(global.scanlines);
            break;
            }   
        case 5:
            {
            global.filter = 1; 
            texture_set_interpolation(global.filter); 
            break;
            }
        case 6:
            {
            global.vsync = 1; 
            scr_setdisplay(global.aa,global.vsync);
            with obj_ctrl_filter alarm[0] = 1; 
            break;
            }
        case 7: 
            {
            if global.aa &lt; scr_max_aa() then global.aa += 1; 
            scr_setdisplay(global.aa,global.vsync);
            with obj_ctrl_filter alarm[0] = 1;
            break;
            }
        case 8: global.hitbox_visible = 1; break;
        case 9: global.flicker = 1; break;
        }
    }
    
// BUTTON 1
if global.button1 &amp;&amp; !hook 
    {
    hook = 1;
    scr_playsnd(snd_click,1);
    if selection = 10
        {
        selection = 1; 
        category = 0;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CONTROL OPTIONS MENU

// BEHAVIOUR
category_type = "[CONTROLS]";
selection_max = 5; // amount of positions in the submenu
max_h = 0;

// LEFT
if global.jleft &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 3: if global.deadzone &gt; 0.1 then global.deadzone -= 0.1; break;
        case 4: if global.joytype &gt; 0 then global.joytype -= 1; break;
        }
    }

// RIGHT
if global.jright &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 3: if global.deadzone &lt; 1 then global.deadzone += 0.1; break;
        case 4: if global.joytype &lt; 2 then global.joytype += 1; break;
        }
    }
    
if global.button1 &amp;&amp; !hook 
    {
    scr_playsnd(snd_click,1);
    hook = 1;
    switch selection
        {
        case 1: c = instance_create(x,y,obj_ctrl_rebind); c.control = 1; break;
        case 2: c = instance_create(x,y,obj_ctrl_rebind); c.control = 1 + global.joy_system; break;
        case 5: selection = 1; category = 0; break;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MAIN OPTIONS MENU
category_type = "[CONFIG]";
selection_max = 5;
max_h = 0;

if global.button1 &amp;&amp; !hook 
    {
    scr_playsnd(snd_click,0);
    hook = 1;
    switch selection
        {
        case 1: selection = 1; category = 1; break;
        case 2: selection = 1; category = 2; break;
        case 3: selection = 1; category = 3; break;
        case 4: selection = 1; category = 4; break;
        case 5: instance_destroy(); break;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !enabled exit;
// INIT
scr_view_vars();
draw_set_font(global.fnt_default);
draw_set_halign(fa_left);
s = 125; g = 10;

// DRAW BLACK BOX
draw_set_alpha(0.5);
draw_set_color(b);
draw_rectangle(xview+30,yview+s-8,xview+210,yview+s+(g*(selection_max+3))+max_h,0);

// DRAW CATEGORY TEXT
draw_set_alpha(1);
draw_set_color(c_white);
draw_text(xview+60,yview+s,string(category_type));
        
// ----------------- MAIN EVENT --------------
draw_set_color(8454016);

// ------ MAIN CONFIG MENU ------
if category = 0
    {
    // TEXT
    draw_text(xview+60,yview+s+(g*1),"CONTROL SETTINGS");
    draw_text(xview+60,yview+s+(g*2),"VIDEO SETTINGS");
    draw_text(xview+60,yview+s+(g*3),"AUDIO SETTINGS");
    draw_text(xview+60,yview+s+(g*4),"MISC. SETTINGS");
    
    draw_text(xview+60,yview+s+(g*6),"EXIT CONFIG");
    }
    
// ------ CONTROLS CONFIG MENU -----
if category = 1
    {
    // BEHAVIOURS
    dz = string(round(global.deadzone*100))+"%";
    if global.deadzone = 0 then dz = "EXACT";
    switch global.joytype
        {
        case 0: du = "AXES"; break;
        case 1: du = "DPAD"; break;
        case 2: du = "BOTH"; break;
        }
        
    // TEXT
    draw_text(xview+60,yview+s+(g*1),"DEFINE KEYBOARD");
    draw_text(xview+60,yview+s+(g*2),"DEFINE JOYSTICK");
    draw_text(xview+60,yview+s+(g*3),"DEADZONE: "+string(dz)); 
    draw_text(xview+60,yview+s+(g*4),"JOYSTICK U/D/L/R: "+string(du));
    
    draw_text(xview+60,yview+s+(g*6),"RETURN TO MENU");
    }
    
// ------ VIDEO CONFIG MENU ------
if category = 2
    {
    // BEHAVIOURS
    if global.fullscreen = 0 then full_str = "OFF" else full_str = "ON";
    switch global.tate
        {
        case 0: tate_str = "0*"; break;
        case 1: tate_str = "90*"; break;
        case 2: tate_str = "180*"; break;
        case 3: tate_str = "270*"; break;
        }
    switch global.scanlines
        {
        case 0: scan_str = "NONE"; break;
        case 1: scan_str = "HORIZONTAL"; break;
        case 2: scan_str = "VERTICAL"; break;
        }
    switch global.aa
        {
        case 0: aa_str = "OFF"; break;
        case 1: aa_str = "2xAA"; break;
        case 2: aa_str = "4xAA"; break;
        case 3: aa_str = "8xAA"; break;
        }
    if global.filter = 0 then filter_str = "OFF" else filter_str = "ON";
    if global.vsync = 0 then vsync_str = "OFF" else vsync_str = "ON";
    if global.hitbox_visible = 0 then hitbox_str = "HIDDEN" else hitbox_str = "VISIBLE";
    if global.flicker = 0 then exp_str = "OPAQUE" else exp_str = "FLICKER";
    
    
    // TEXT
    draw_text(xview+60,yview+s+(g*1),"FULLSCREEN: "+string(full_str));
    draw_text(xview+60,yview+s+(g*2),"WINDOW SIZE: x"+string(global.win_size));
    draw_text(xview+60,yview+s+(g*3),"TATE: "+string(tate_str));
    draw_text(xview+60,yview+s+(g*4),"SCANLINES: "+string(scan_str));
    draw_text(xview+60,yview+s+(g*5),"FILTER: "+string(filter_str));
    draw_text(xview+60,yview+s+(g*6),"VSYNC: "+string(vsync_str));
    draw_text(xview+60,yview+s+(g*7),"ANTIALIASING: "+string(aa_str));
    draw_text(xview+60,yview+s+(g*8),"HITBOX: "+string(hitbox_str));
    draw_text(xview+60,yview+s+(g*9),"EXPLOSIONS: "+string(exp_str));
    
    draw_text(xview+60,yview+s+(g*11),"RETURN TO MENU");
    
    // WARNING TEXT
    if warning != ""
        {
        draw_set_halign(fa_center);
        draw_set_color(c_red);
        draw_text(xview+120,yview+s+(g*13),string_spacefix(warning));
        }
    }


// ------ VOLUME CONFIG MENU ------
if category = 3
    {
    // BEHAVIOURS
    vol_music = string(round(global.music_volume))+"%";
    if global.music_volume = 100 then vol_music = "MAX";
    if global.music_volume = 0 then vol_music = "OFF";

    vol_sfx = string(round(global.sfx_volume))+"%";
    if global.sfx_volume = 100 then vol_sfx = "MAX";
    if global.sfx_volume = 0 then vol_sfx = "OFF";
    
    vol_voice = string(round(global.voice_volume))+"%";
    if global.voice_volume = 100 then vol_voice = "MAX";
    if global.voice_volume = 0 then vol_voice = "OFF";
    
    // TEXT
    draw_text(xview+60,yview+s+(g*1),"MUSIC VOLUME: "+string(vol_music));
    draw_text(xview+60,yview+s+(g*2),"SFX VOLUME: "+string(vol_sfx));
    draw_text(xview+60,yview+s+(g*3),"VOICE VOLUME: "+string(vol_voice));
    draw_text(xview+60,yview+s+(g*4),"DEFINE MUSIC PACK");
    
    draw_text(xview+60,yview+s+(g*6),"RETURN TO MENU");
    }
    
// ------ MISC. OPTIONS MENU ------
if category = 4
    {
    // BEHAVIOURS
    if global.debug = 1 then debug_str = "ON" else debug_str = "OFF";
    if global.fonttype = 1 then font_str = "ON" else font_str = "OFF";
    switch global.bulletcolour
        {
        case 1: b_str = "BLUE"; break;
        case 2: b_str = "RED"; break;
        case 3: b_str = "MIXED"; break;
        }
    
    // TEXT
    draw_text(xview+60,yview+s+(g*1),"DEBUG DISPLAY: "+string(debug_str));
    draw_text(xview+60,yview+s+(g*2),"ALT. FONTSET: "+string(font_str));
    draw_text(xview+60,yview+s+(g*3),"BULLET COLOUR: "+string(b_str));
    draw_text(xview+60,yview+s+(g*4),"RESET HIGHSCORES");
    
    draw_text(xview+60,yview+s+(g*6),"RETURN TO MENU");
    
    if timer &gt; 0
        {
        draw_set_color(c_white);
        draw_text(xview+60,yview+s+(g*8),"HIGH SCORES RESET!");
        }
    }
    
if selection = selection_max then i = 10 else i = 0;
draw_sprite(spr_shipselect,-1,xview+45,yview+s+5+(g*selection+i));
    
// ----------------- END MAIN EVENT --------------
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
