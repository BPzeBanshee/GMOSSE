<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enabled = 0;
hook = 1;

category = 0;
selection = 1;
warning = "";
max_h = 0;
timer = 0;

// base position for menu
s = 125;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Save config on termination, reenable main/pause
if instance_exists(obj_ctrl_menu) then obj_ctrl_menu.enabled = 1;
if instance_exists(obj_ctrl_pause) then obj_ctrl_pause.enabled = 1;
scr_config_save("config.ini");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fullscreen toggle hack for ini window
scr_pickmusicini();
if global.use_new_renderer
then with obj_ctrl_render alarm[1] = 1
else with obj_ctrl_render_old alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MENU BEHAVIOUR (PER MODE)
event_user(category);
enabled = 1;

// UP
if global.jup &amp;&amp; !hook
    {
    scr_playsnd(snd_click,0);
    hook = 1;
    selection -= 1;
    if selection &lt; 1 then selection = selection_max;
    }
    
// DOWN
if global.jdown &amp;&amp; !hook
    {
    scr_playsnd(snd_click,0);
    hook = 1;
    selection += 1;
    if selection &gt; selection_max then selection = 1;
    }

// HOOK
if !global.button1 &amp;&amp; !global.jup &amp;&amp; !global.jdown
&amp;&amp; !global.jleft &amp;&amp; !global.jright then hook = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MISC. SETTINGS MENU

// BEHAVIOUR
category_type = "MISC. SETTINGS";
selection_max = 7; // amount of positions in the submenu
max_h = 30;
if timer &gt; 0 then timer -= 1;

// LEFT
if global.jleft &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: global.debug = 0; break;
        case 2: global.hitbox_visible = 0; break;
        case 3: global.fonttype = 0; scr_fonts_set(); break;
        case 4: if global.bulletcolour &gt; 1 then global.bulletcolour -= 1;  break;
        case 5: global.flicker = 0; break;
        }
    }
    
// RIGHT
if global.jright &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: global.debug = 1; break;
        case 2: global.hitbox_visible = 1; break;
        case 3: global.fonttype = 1; scr_fonts_set(); break;
        case 4: if global.bulletcolour &lt; 3 then global.bulletcolour += 1;  break;
        case 5: global.flicker = 1; break;
        }
    }
    
// BUTTON 1
if global.button1 &amp;&amp; !hook 
    {
    hook = 1;
    scr_playsnd(snd_click,1);
    switch selection
        {
        case 6:
            {
            timer = 90;
            scr_hiscore_reset();
            scr_hiscore_save("score.gmes");
            break;
            }
        case 7:
            {
            timer = 0;
            selection = 1; 
            category = 0;
            break;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// VOLUME OPTIONS MENU

// BEHAVIOUR
category_type = "AUDIO SETTINGS";
selection_max = 5; // amount of positions in the submenu
max_h = 0;

// LEFT
if global.jleft &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: if global.music_volume &gt; 0 then global.music_volume -= 10; break;
        case 2: if global.sfx_volume &gt; 0 then global.sfx_volume -= 10; break;
        case 3: if global.voice_volume &gt; 0 then global.voice_volume -= 10; break;
        }
    with obj_ctrl_music scr_setvolmusic(music);
    scr_setvolsnd();    
    }
    
// RIGHT
if global.jright &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: if global.music_volume &lt; 100 then global.music_volume += 10; break;
        case 2: if global.sfx_volume &lt; 100 then global.sfx_volume += 10; break;
        case 3: if global.voice_volume &lt; 100 then global.voice_volume += 10; break;
        }
    with obj_ctrl_music scr_setvolmusic(music);
    scr_setvolsnd();
    }
    
// BUTTON 1
if global.button1 &amp;&amp; !hook 
    {
    hook = 1;
    scr_playsnd(snd_click,1);
    switch selection
        {
        case 4:
            {
            // Hack to allow time to respond to window change
            if global.fullscreen then scr_fullscreen(0);
            alarm[0]=2;
            break;
            }
        case 5:
            {
            selection = 1; 
            category = 0;
            break;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// FILTER OPTIONS MENU

// BEHAVIOUR
category_type = "DISPLAY FILTERS";//"[FILTERS]";
selection_max = 5; // amount of positions in the submenu
max_h = 0;

// LEFT
if global.jleft &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: if global.wallbrightness &gt; 5 then global.wallbrightness -= 5; break;
        case 2: global.filter = 0; break;
        case 3: global.scanlines -= 1; if global.scanlines &lt; 0 then global.scanlines = 2; break;
        case 4: if global.scanline_alpha &gt; 5 then global.scanline_alpha -= 5; break;
        }
    }
    
// RIGHT
if global.jright &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: if global.wallbrightness &lt; 100 then global.wallbrightness += 5; break;
        case 2: global.filter = 1; break;
        case 3: global.scanlines += 1; if global.scanlines &gt; 2 then global.scanlines = 0; break;
        case 4: if global.scanline_alpha &lt; 100 then global.scanline_alpha += 5; break;
        }
    }
    
// BUTTON 1
if global.button1 &amp;&amp; !hook 
    {
    hook = 1;
    scr_playsnd(snd_click,1);
    if selection = selection_max
        {
        max_h = 0;
        selection = 1; 
        category = 2;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// VIDEO OPTIONS MENU

// BEHAVIOUR
category_type = "VIDEO SETTINGS";//"[VIDEO]";
selection_max = 10; // amount of positions in the submenu
max_h = 0;

warning = "";
if !global.use_new_renderer
    {
    if (selection = 5 || selection = 7 || selection = 8)
        {
        max_h = 45;
        warning = "NEW RENDERER DISABLED.
CERTAIN FEATURES CURRENTLY
NOT AVAILABLE.";
        }
    }

// LEFT
if global.jleft &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: global.fullscreen = 0; scr_fullscreen(global.fullscreen); break;
        case 2: global.vsync = 0; scr_setdisplay(global.aa,global.vsync); break;
        case 3: if global.aa &gt; 0 then global.aa -= 1; scr_setdisplay(global.aa,global.vsync); break;
        case 4: global.rotation -= 90; if global.rotation &lt; 0 then global.rotation = 270; break;
        case 5: if global.use_new_renderer then global.window_aspect -= 1; if global.window_aspect &lt; 0 then global.window_aspect = 3; break; 
        case 6: if global.window_size &gt; 0 then global.window_size -= 1; break; 
        case 7: if global.use_new_renderer then global.scaling = 0; break;
        case 8: if global.use_new_renderer then global.use_wallpaper = 0; break;
        }
    }
    
// RIGHT
if global.jright &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 1: global.fullscreen = 1; scr_fullscreen(global.fullscreen); break;
        case 2: global.vsync = 1; scr_setdisplay(global.aa,global.vsync); break;
        case 3: if global.aa &lt; scr_max_aa() then global.aa += 1; scr_setdisplay(global.aa,global.vsync); break;
        case 4: global.rotation += 90; if global.rotation &gt; 270 then global.rotation = 0; break;
        case 5: if global.use_new_renderer then global.window_aspect += 1; if global.window_aspect &gt; 3 then global.window_aspect = 0; break;
        case 6: 
            {
            if global.use_new_renderer
                {
                var r = obj_ctrl_render;
                var max_s = -1;
                if r.m_size+1 &lt;= r.l_max_size
                    {
                    if r.m_array_w[r.m_aspect,r.m_size+1] &lt;= display_get_width()
                    &amp;&amp; r.m_array_h[r.m_aspect,r.m_size+1] &lt;= display_get_height()
                    then max_s = r.l_max_size;
                    }
                }
            else var max_s = 2;
            if global.window_size &lt; max_s then global.window_size += 1; 
            break;
            }
        case 7: if global.use_new_renderer then global.scaling = 1; break;
        case 8: if global.use_new_renderer then global.use_wallpaper = 1; break;
        }
    }
    
// BUTTON 1
if global.button1 &amp;&amp; !hook 
    {
    hook = 1;
    scr_playsnd(snd_click,1);
    if selection = selection_max - 1 // Filter Options
        {
        max_h = 0;
        selection = 1;
        category = 3;
        }
    if selection = selection_max // Return to Config Menu
        {
        max_h = 0;
        selection = 1; 
        category = 0;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CONTROL OPTIONS MENU

// BEHAVIOUR
category_type = "CONTROLS SETTINGS";
selection_max = 5; // amount of positions in the submenu
max_h = 0;

// LEFT
if global.jleft &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 3: if global.deadzone &gt; 0.1 then global.deadzone -= 0.1; break;
        case 4: if global.joytype &gt; 0 then global.joytype -= 1; break;
        }
    }

// RIGHT
if global.jright &amp;&amp; !hook
    {
    hook = 1;
    switch selection
        {
        case 3: if global.deadzone &lt; 1 then global.deadzone += 0.1; break;
        case 4: if global.joytype &lt; 2 then global.joytype += 1; break;
        }
    }
    
if global.button1 &amp;&amp; !hook 
    {
    scr_playsnd(snd_click,1);
    hook = 1;
    switch selection
        {
        case 1: c = instance_create(x,y,obj_ctrl_rebind); c.control = 1; break;
        case 2: c = instance_create(x,y,obj_ctrl_rebind); c.control = 2; break;
        case 5: selection = 1; category = 0; break;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MAIN OPTIONS MENU
category_type = "CONFIGURATION MENU";
selection_max = 5;
max_h = 0;

if global.button1 &amp;&amp; !hook 
    {
    scr_playsnd(snd_click,1);
    hook = 1;
    
    switch selection
        {
        case 1: selection = 1; category = 1; break;
        case 2: selection = 1; category = 2; break;
        case 3: selection = 1; category = 4; break;
        case 4: selection = 1; category = 5; break;
        case 5: instance_destroy(); break;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW MENU CODE
if !enabled exit;
// INIT
scr_draw_vars(global.fnt_default,fa_left,c_black);
var g; g = 10;

// DRAW BLACK BOX
draw_set_alpha(0.75);
draw_rectangle(xview+25,yview+s-8,xview+215,yview+s+(g*(selection_max+3))+max_h,0);

// DRAW CATEGORY TEXT
draw_set_alpha(1);
draw_set_color(c_white);
draw_text(xview+60,yview+s,string(category_type));
        
// ----------------- MAIN EVENT --------------
draw_set_color(8454016);

// ------ MAIN CONFIG MENU ------
if category = 0
    {
    // TEXT
    draw_text(xview+60,yview+s+(g*1),"CONTROL SETTINGS");
    draw_text(xview+60,yview+s+(g*2),"VIDEO SETTINGS");
    draw_text(xview+60,yview+s+(g*3),"AUDIO SETTINGS");
    draw_text(xview+60,yview+s+(g*4),"MISC. SETTINGS");
    
    draw_text(xview+60,yview+s+(g*6),"EXIT CONFIG");
    }
    
// ------ CONTROLS CONFIG MENU -----
if category = 1
    {
    // BEHAVIOURS
    var dz,du;
    dz = string(round(global.deadzone*100))+"%";
    if global.deadzone = 0 then dz = "EXACT";
    switch global.joytype
        {
        case 0: du = "AXES"; break;
        case 1: du = "DPAD"; break;
        case 2: du = "BOTH"; break;
        }
    
    // TEXT
    draw_text(xview+60,yview+s+(g*1),"DEFINE KEYBOARD");
    draw_text(xview+60,yview+s+(g*2),"DEFINE JOYSTICK");
    draw_text(xview+60,yview+s+(g*3),"DEADZONE: "+string(dz)); 
    draw_text(xview+60,yview+s+(g*4),"JOYSTICK U/D/L/R: "+string(du));
    
    draw_text(xview+60,yview+s+(g*6),"RETURN TO MENU");
    }
    
// ------ VIDEO CONFIG MENU ------
if category = 2
    {
    // BEHAVIOURS
    if global.fullscreen = 1 then full_str = "ON" else full_str = "OFF";
    if global.vsync = 1 then vsync_str = "ON" else vsync_str = "OFF";
    switch global.aa
        {
        case 0: aa_str = "OFF"; break;
        case 1: aa_str = "2xAA"; break;
        case 2: aa_str = "4xAA"; break;
        case 3: aa_str = "8xAA"; break;
        }
    tate_str = string(global.rotation)+"*";
    
    if global.use_new_renderer
        {
        switch global.window_aspect
            {
            case 0: aspect_str = "3:4 (NATIVE)"; break;
            case 1: aspect_str = "4:3"; break;
            case 2: aspect_str = "16:9"; break;
            case 3: aspect_str = "16:10"; break;
            }
        winsize_str = obj_ctrl_render.l_res;
        if global.scaling = 0 then scale_str = "STRETCH" else scale_str = "CLEAN";
        if global.use_wallpaper = 0 then wallpaper_str = "OFF" else wallpaper_str = "ON";
        }
    else
        {
        aspect_str = "3:4 (NATIVE)";
        winsize_str = obj_ctrl_render_old.l_res;
        scale_str = "CLEAN";
        wallpaper_str = "OFF";
        }
    
    // TEXT
    draw_text(xview+60,yview+s+(g*1),"FULLSCREEN: "+string(full_str));
    draw_text(xview+60,yview+s+(g*2),"VSYNC: "+string(vsync_str));
    draw_text(xview+60,yview+s+(g*3),"ANTIALIASING: "+string(aa_str));
    draw_text(xview+60,yview+s+(g*4),"ROTATION: "+string(tate_str));
    if !global.use_new_renderer then draw_set_color(c_red);
    draw_text(xview+60,yview+s+(g*5),"WIN. ASPECT: "+string(aspect_str));
    draw_set_color(8454016);
    draw_text(xview+60,yview+s+(g*6),"WIN. SIZE: "+string(winsize_str));
    if !global.use_new_renderer then draw_set_color(c_red);
    draw_text(xview+60,yview+s+(g*7),"SCALING: "+string(scale_str));
    draw_text(xview+60,yview+s+(g*8),"WALLPAPER: "+string(wallpaper_str));
    draw_set_color(8454016);
    
    draw_text(xview+60,yview+s+(g*10),"CONFIGURE FILTERS");
    draw_text(xview+60,yview+s+(g*11),"RETURN TO MENU");
    
    // WARNING TEXT
    if warning != ""
        {
        draw_set_halign(fa_center);
        draw_set_color(c_red);
        draw_text(xview+120,yview+s+(g*15),string(warning));
        }
    }
    
// ------ FILTER OPTIONS SUB-MENU ------
if category = 3
    {
    // BEHAVIOURS
    wallbright_str = string(round(global.wallbrightness))+"%";
    if global.filter = 1 then filter_str = "ON" else filter_str = "OFF";
    switch global.scanlines
        {
        case 0: scan_str = "NONE"; break;
        case 1: scan_str = "HORIZONTAL"; break;
        case 2: scan_str = "VERTICAL"; break;
        case 3: scan_str = "STATIC"; break;
        }
    alpha_str = string(round(global.scanline_alpha))+"%";
        
    // TEXT
    draw_text(xview+60,yview+s+(g*1),"WALLPAPER ALPHA: "+string(wallbright_str));
    draw_text(xview+60,yview+s+(g*2),"BILINEAR FILTER: "+string(filter_str));
    draw_text(xview+60,yview+s+(g*3),"SCANLINES: "+string(scan_str));
    draw_text(xview+60,yview+s+(g*4),"SCANLINE ALPHA: "+string(alpha_str));
    
    draw_text(xview+60,yview+s+(g*6),"RETURN TO VIDEO");
    }


// ------ VOLUME CONFIG MENU ------
if category = 4
    {
    // BEHAVIOURS
    var vol_music,vol_sfx,vol_voice;
    vol_music = string(global.music_volume)+"%";
    if global.music_volume = 100 then vol_music = "MAX";
    if global.music_volume = 0 then vol_music = "OFF";

    vol_sfx = string(global.sfx_volume)+"%";
    if global.sfx_volume = 100 then vol_sfx = "MAX";
    if global.sfx_volume = 0 then vol_sfx = "OFF";
    
    vol_voice = string(global.voice_volume)+"%";
    if global.voice_volume = 100 then vol_voice = "MAX";
    if global.voice_volume = 0 then vol_voice = "OFF";
    
    // TEXT
    draw_text(xview+60,yview+s+(g*1),"MUSIC VOLUME: "+string(vol_music));
    draw_text(xview+60,yview+s+(g*2),"SFX VOLUME: "+string(vol_sfx));
    draw_text(xview+60,yview+s+(g*3),"VOICE VOLUME: "+string(vol_voice));
    draw_text(xview+60,yview+s+(g*4),"DEFINE MUSIC PACK");
    
    draw_text(xview+60,yview+s+(g*6),"RETURN TO MENU");
    }
    
// ------ MISC. OPTIONS MENU ------
if category = 5
    {
    // BEHAVIOURS
    var debug_str,font_str,hitbox_str,b_str,flicker_str;
    if global.debug = 1 then debug_str = "ON" else debug_str = "OFF";
    if global.fonttype = 1 then font_str = "ON" else font_str = "OFF";
    if global.hitbox_visible = 0 then hitbox_str = "HIDDEN" else hitbox_str = "VISIBLE";
    switch global.bulletcolour
        {
        case 1: b_str = "BLUE"; break;
        case 2: b_str = "RED"; break;
        case 3: b_str = "MIXED"; break;
        }
    if global.flicker = 1 then flicker_str = "ON" else flicker_str = "OFF";
    
    // TEXT
    draw_text(xview+60,yview+s+(g*1),"DEBUG DISPLAY: "+string(debug_str));
    draw_text(xview+60,yview+s+(g*2),"HITBOX: "+string(hitbox_str));
    draw_text(xview+60,yview+s+(g*3),"ALT. FONTSET: "+string(font_str));
    draw_text(xview+60,yview+s+(g*4),"BULLET COLOUR: "+string(b_str));
    draw_text(xview+60,yview+s+(g*5),"EXPLOSION FLICKER: "+string(flicker_str));
    draw_text(xview+60,yview+s+(g*6),"RESET HIGHSCORES");
    
    draw_text(xview+60,yview+s+(g*8),"RETURN TO MENU");
    
    if timer &gt; 0
        {
        draw_set_color(c_white);
        draw_text(xview+60,yview+s+(g*10),"HIGH SCORES RESET!");
        }
    }
    
var i; i = 0;
if selection = selection_max then i = 10;
if category = 2 then if selection = selection_max - 1 then i = 10;
draw_sprite(spr_shipselect,-1,xview+45,yview+s+5+(g*selection+i));
    
// ----------------- END MAIN EVENT --------------
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
