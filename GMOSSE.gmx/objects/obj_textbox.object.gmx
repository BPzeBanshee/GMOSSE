<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* 
Message is the message that will show up text will be drawed, and chr1 is how
manying words would show up message_number it will change the message
*/

chr1 = 0;
text = "";
msg = "";
mode = 1;
hook = 1;
subimg = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// string_copy is what does the scrolling
chr1 += 1;
text = string_copy(msg,1,chr1);

// Dialog behaviour
if room == rm_test1
    {
    if !global.button1 then hook = 0;
    if global.button1 &amp;&amp; !hook 
    &amp;&amp; string_length(text) = string_length(msg)
        {
        hook = 1; 
        chr1 = 0;
        mode += 1;
        }
        
    event_user(0);
    }
    
if room == rm_tutorial
    {
    if !global.button1 then hook = 0;
    
    if global.button1 &amp;&amp; !hook 
    &amp;&amp; string_length(text) == string_length(msg)
    &amp;&amp; (mode &lt; 4 || mode == 5 || mode &gt;= 7)
        {
        hook = 1; 
        chr1 = 0;
        if mode = 3
            {
            jup_p = 0;
            jdown_p = 0;
            jleft_p = 0;
            jright_p = 0;
            j1_p = 0;
            j2_p = 0;
            j3_p = 0;
            }
        mode += 1;
        }
        
    if mode == 4
        {
        if global.jup then jup_p += 1;
        if global.jdown then jdown_p += 1;
        if global.jleft then jleft_p += 1;
        if global.jright then jright_p += 1;
        if jup_p &gt; 10 &amp;&amp; jdown_p &gt; 10
        &amp;&amp; jleft_p &gt; 10 &amp;&amp; jright_p &gt; 10
            {
            mode += 1;
            chr1 = 0;
            }
        }
        
    if mode == 6
        {
        if global.button1 then j1_p += 1;
        if j1_p &gt; 20 
            {
            mode += 1;
            chr1 = 0;
            }
        }
        
    event_user(1);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>subimg = 2;
switch mode
{
case 1: 

msg = "Welcome to the tutorial for GMOSSE!
This tutorial will attempt to cover the basics
that will be required for getting anywhere
in this game.";
break;
    
case 2: 
msg = "If you don't know what 'GMOSSE' is,
it stands for 'Game Maker Open-Source
Shmup Engine'. It's purpose is to serve
as a template that aspiring Game Maker
developers can use to create their own STG.";
break;

case 3: 
msg = "If you don't know what a 'shmup' or 'STG' is,
leave now, burn in Hell, 
and leave this program alone.";
break;
    
case 4:
msg = "With that out of the way, we may begin 
covering the basics of gameplay.
Move around with UP/DOWN/LEFT/RIGHT. 
These are set to the associated buttons
on the keyboard by default.";
break;

case 5:
msg = "Well done. You can change the 
settings for it via the Options Menu.";
break;

case 6:
msg = "This would not be a shmup if there 
wasn't shooting. As it happens, we have 
BUTTON 1 (set to Z by default) to fire
bullets at enemies and obstacles. 
Try it out.";
break;

case 7:
msg = "Well done. By holding it down for 
a bit, you should notice the ship 
repeatedly shooting. This is commonly 
referred to as 'autofire', and most
ships in GMOSSE are built with it in mind.";
break;

case 8:
msg = "For the moment that is all that
this tutorial will cover. It is quite
WIP at the moment - the full tutorial
will also cover scoring. Goodbye for now.";
break;
    
case 9:
msg = "";
instance_destroy();
break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch mode
{
case 1: 
subimg = 0;
msg = "BP: 
Yo Dawg!";
break;
    
case 2: 
subimg = 1;
msg = "Kaiser:
Hi.";
break;

case 3: 
subimg = 0;
msg = "BP:
Guess what?";
break;
    
case 4:
subimg = 1;
msg = "Kaiser:
..............What?";
break;
    
case 5:
subimg = 0;
msg = "BP:
OREOS!!!!!!!!!!

OMGOMGOMGOMGOMGOMGOMG
OMGOMGOMGOMGOMGOMGOMG
OMGOMGOMGOMG!!!111";
break;

case 6:
subimg = 1;
msg = "Kaiser:
........................
.......................
......................
.....................
DAFAQ?
"
break;

case 7:
subimg = 0;
msg = "BP:
No, seriously, I got Oreos.

Want some?";
break;

case 8:
subimg = 1;
msg = "Kaiser:
..............
.............
nope.avi";
break;
    
case 9:
subimg = 0;
msg = "BP:
Well aren't you the fucking spoilsport. &gt;_&gt;";
break;

case 10:
subimg = 0;
msg = "BP:
Actually, what are we even doing here anyway?
All I see is a black room and the player ship
trying to skip this conversation like an
impatient little shit.";
break;

case 11:
subimg = 1;
msg = "Kaiser:
Well how the fuck should I know?
YOU programmed this damn thing.";
break;

case 12:
subimg = 0;
msg = "BP:
Ah, true. 

BRB; drinking more Paul's Iced Coffee.";
break;

case 13:
subimg = 1;
msg = "Kaiser:
*facepalm*";
break;
    
case 14:  
instance_destroy();
break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This will draw the message
scr_draw_vars(global.fnt_little,fa_left,c_white);
draw_set_alpha(1);
x = xview;
y = yview+200;
draw_text(x+40,y,string_spacefix(text));
draw_sprite(spr_portraits,subimg,x,y);
draw_sprite_stretched_ext(spr_greypixel,-1,x,y,240,64,c_white,0.25);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
