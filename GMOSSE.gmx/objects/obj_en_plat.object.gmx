<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_en_plat</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>obj_en_air</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Compulsory
enemyHP = 200;
event_inherited();

// Moving vars
direction = 270;
speed = 0.5;

// Attack vars
timer = 0;
phase = 1;
atk_timer = 0;
atk_phase = 1;
aim = 0;

tur_count = 0;
made = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(tur1) with tur1 instance_destroy();
if instance_exists(tur2) with tur2 instance_destroy();
if instance_exists(tur3) with tur3 instance_destroy();
if instance_exists(tur4) with tur4 instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* AESTHETICS */
thr=scr_basicshot(x,y,obj_en_thr,random_range(3,5),random_range(direction+100,direction+260));
thr.image_xscale = 4;
thr.image_yscale = 4;
thr.image_angle = random(360);

/* CREATION OF TURRETS */
if y &gt; yview-(sprite_height/2) &amp;&amp; made = 0
    {
    // Creation of turrets
    tur1 = instance_create(x-18,y-18,obj_en_platTUR); // Top-left
    tur2 = instance_create(x+18,y-18,obj_en_platTUR); // Top-right
    tur3 = instance_create(x-18,y+18,obj_en_platTUR); // Bottom-left
    tur4 = instance_create(x+18,y+18,obj_en_platTUR); // Bottom-right
    tur1.parent = (self).id;
    tur2.parent = (self).id;
    tur3.parent = (self).id;
    tur4.parent = (self).id;
    tur_count = 4;
    made = 1;
    }

/* POSITIONING OF TURRETS */
if made = 1
    {
    if instance_exists(tur1) // Top-left
        {
        tur1.x = x - 18; 
        tur1.y = y - 18;
        }
    if instance_exists(tur2) // Top-right
        {
        tur2.x = x + 18; 
        tur2.y = y - 18;
        }
    if instance_exists(tur3) // Bottom-left
        {
        tur3.x = x - 18; 
        tur3.y = y + 18;
        }
    if instance_exists(tur4) // Bottom-right
        {
        tur4.x = x + 18; 
        tur4.y = y + 18;
        }
    }

/* ATTACK PATTERNS */
if tur_count &gt; 0 
    {
    // Pattern Duration/Reset of timers
    timer += 1;
    atk_timer += 1;
    if timer = 120
        {
        timer = 0;
        atk_timer = 0;
        if atk_phase = 1 then atk_phase = 2 else atk_phase = 1;
        }
    
    // First Pattern
    if atk_phase = 1
        {
        if atk_timer = 30 
            {
            with tur1 event_user(1);
            with tur2 event_user(1);
            with tur3 event_user(1);
            with tur4 event_user(1);
            scr_playsnd(snd_en_shot2,1);
            atk_timer = -30; // 90 steps after first call
            }
        }
    
    // Second Pattern
    if atk_phase = 2
        {
        if atk_timer = 4
            {
            with tur1 event_user(2);
            with tur2 event_user(2);
            with tur3 event_user(2);
            with tur4 event_user(2);
            scr_playsnd(snd_en_shot1,1);
            atk_timer = 0;
            }
        }
    }
    
// Final pattern - Only occurs if all turrets are destroyed
if tur_count = 0 &amp;&amp; y &gt; yview-(sprite_height/2) &amp;&amp; y &lt; yview+160
    {
    timer += 1;
    if timer &gt;= 4
        {
        scr_playsnd(snd_en_shot3,1);
        scr_basicshot(x,y,obj_bullet4,4,aim); 
        aim += 45;
        if aim &gt;= 360 then aim = 0;
        timer = 0;
        }
    }    

/* MOVEMENT BEHAVIOUR */
switch phase
    {
    case 1: // Moving down
        {
        if y &gt; yview+160
            {
            // if x == 160 do nothing
            if x &gt; 160 then direction = 180;
            if x &lt; 160 then direction = 0;
            speed = 1;
            phase = 2;
            }
        break;
        }
    case 2: // Moving left/right
        {
        if x &lt; 40 || x &gt; 280
            {
            direction = 90;
            speed = 0.5;
            phase = 3;
            }
        break;
        }
    case 3: // Moving up, then left/right
        {
        if y &lt; yview+40
            {
            if x &gt; 160 then direction = 0;
            if x &lt; 160 then direction = 180;
            speed = 0.35;
            }
        break;
        }
    }
    
/* DEATH HANDLING */
if x &lt; -(sprite_width/2) 
|| x &gt; 320+(sprite_width/2)
|| y &gt; yview+320+(sprite_height/2)
then instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_en_platEXP);
scr_addscore(800,180,1);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
