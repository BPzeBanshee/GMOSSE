<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_e_main</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>made = 0;
timer = 0;
b = 1;
c = 0; 
d = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Create feet and legs
if !made
    {
    p=0;
    event_user(0);
    for (i=0;i&lt;=2;i+=1)
        {
        for (j=0;j&lt;=1;j+=1)
            {
            leg[i,j] = instance_create(x,y,obj_e_leg);
            foot[i,j] = instance_create(pos[p,0],pos[p,1],obj_e_foot);
            p += 1;
            }
        }
    made = 1;
    }
    
if made
    {
    // Maintain Leg info
    var yscroll;
    if spd_y = 0 then yscroll = true else yscroll = false; // spd_y is a globalvar declared by scr_camera_init iirc
    for(i=0;i&lt;=2;i+=1)
        {
        for (j=0;j&lt;=1;j+=1)
            {
            leg[i,j].x = x; leg[i,j].y = y;
            leg[i,j].direction = point_direction(leg[i,j].x,leg[i,j].y,foot[i,j].x,foot[i,j].y);
            leg[i,j].image_xscale = point_distance(leg[i,j].x,leg[i,j].y,foot[i,j].x,foot[i,j].y);
            if yscroll {foot[i,j].y += 0.5; foot[i,j].yy += 0.5;} // fake yscroll for test
            }
        }
        
    // set center to average out of the foot positions
    x = (foot[0,0].x+foot[0,1].x+foot[1,0].x+foot[1,1].x+foot[2,0].x+foot[2,1].x) / 6;
    y = (foot[0,0].y+foot[0,1].y+foot[1,0].y+foot[1,1].y+foot[2,0].y+foot[2,1].y) / 6;

    
    if timer &gt; 0 then timer -= 1;
    if y &gt;= yview+130 &amp;&amp; timer = 0
        {
        timer = 60;
        
        // Set which feet to move
        // upper-left &amp; lower-right
        // upper-right &amp; lower-left
        var n1a,n1b,n2a,n2b,n3a,n3b;
        if b = 0
            {
            n1a = 0; n1b = 0;
            n2a = 1; n2b = 1;
            n3a = 2; n3b = 0;
            b = 1;
            }
        else
            {
            n1a = 0; n1b = 1;
            n2a = 1; n2b = 0;
            n3a = 2; n3b = 1;
            b = 0;
            }
            
        // Set new foot y positions to move up
        foot[n1a,n1b].yy = foot[n1a,n1b].y - 64;
        foot[n2a,n2b].yy = foot[n2a,n2b].y - 64;
        foot[n3a,n3b].yy = foot[n3a,n3b].y - 64;
        
        // Set new foot x positions to move sideways
        if keyboard_check(ord("J")) &amp;&amp; c = 0 then c = 1;
        if keyboard_check(ord("L")) &amp;&amp; d = 0 then d = 1;
        if c &gt; 0
            {
            foot[n1a,n1b].xx = foot[n1a,n1b].x - 32;
            foot[n2a,n2b].xx = foot[n2a,n2b].x - 32;
            foot[n3a,n3b].xx = foot[n3a,n3b].x - 32;
            c += 1; if c = 3 then c = 0;
            }
        if d &gt; 0
            {
            foot[n1a,n1b].xx = foot[n1a,n1b].x + 32;
            foot[n2a,n2b].xx = foot[n2a,n2b].x + 32;
            foot[n3a,n3b].xx = foot[n3a,n3b].x + 32;
            d += 1; if d = 3 then d = 0;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// default feet starting positions
pos[0,0] = x - 32; pos[0,1] = y - 80;
pos[1,0] = x + 32; pos[1,1] = y - 48;

pos[2,0] = x - 64; pos[2,1] = y + 16;
pos[3,0] = x + 64; pos[3,1] = y - 16;

pos[4,0] = x - 32; pos[4,1] = y + 48;
pos[5,0] = x + 32; pos[5,1] = y + 80;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
