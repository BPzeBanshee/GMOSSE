<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_warbird</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Weapon-related variables
shot_timer = 0;
shot2_timer = 0;
bomb_timer = 0;
limit = 2;
time_passed = 0;

// Ship speed settings
global.shipspeed = 3;
global.slowshipspeed = 2;
global.diagspeed = 3;
global.sldiagspeed = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Compulsory
event_inherited();

// Timers
if shot_timer &gt; 0 then shot_timer -= 1;
if shot2_timer &gt; 0 then shot2_timer -= 1;
if bomb_timer &gt; 0 then bomb_timer -= 1;
if time_passed &lt; 180 then time_passed += 1;

// Main Shot
if global.button1 &amp;&amp; shot_timer = 0
    {
    scr_playsnd(snd_war_shot1,1);
    scr_basicshot(x-4,y,obj_warbird_shot,20,90);
    scr_basicshot(x+4,y,obj_warbird_shot,20,90);
    scr_basicshot(x-10,y,obj_warbird_shot,20,96);
    scr_basicshot(x+10,y,obj_warbird_shot,20,84);
    shot_timer = 5;
    }
    
// Secondary Shot (lasers)
if global.button1 &amp;&amp; shot2_timer = 0    
    {
    if instance_number(obj_warbird_laser) &lt; limit
        {
        scr_playsnd(snd_war_shot2,1);
        scr_basicshot(x-10,y+4,obj_warbird_laser,9,91);
        scr_basicshot(x+10,y+4,obj_warbird_laser,9,89);
        shot2_timer = 8;
        }
    }
    
// Bomb Deployment
if global.button2 &amp;&amp; bomb_timer = 0 &amp;&amp; global.bombs &gt; 0
    {
    global.bombs -= 1;
    bomb_timer = 320;
    instance_create(x,y,obj_warbird_bomb);
    scr_playsnd(snd_war_bomb,0);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_warbird_bomb">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if time_passed = 180 then obj_hitbox.invincible = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
