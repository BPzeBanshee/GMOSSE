<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss2v2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>obj_en_air</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Compulsory
enemyHP = 1200;          // initial health
event_inherited();

// Initial moving/aesthetic variables
//image_alpha = 0;
vspeed = 3.6;//3.75
spd = 0;
neg = 0;

// Pod-related
made = 0;
pods_killed = 0;
hp1 = 300;
hp2 = 300;
hp3 = 300;
hp4 = 300;

// Attack-related
phase = 0;
timer = 0;
timeout = 6000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if made 
    {
    if instance_exists(pod1) with pod1 instance_destroy();
    if instance_exists(pod2) with pod2 instance_destroy();
    if instance_exists(pod3) with pod3 instance_destroy();
    if instance_exists(pod4) with pod4 instance_destroy(); 
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Calls parent event of same event type
event_inherited();

// Pod positioning (happens regardless of mode)
if !made then exit;

if instance_exists(pod1)
    {
    hp1 = pod1.enemyHP;
    pod1.x = x + lengthdir_x(37,image_angle+45);
    pod1.y = y + lengthdir_y(37,image_angle+45);
    //pod1.image_angle = image_angle;
    pod1.image_alpha = image_alpha;
    }
    
if instance_exists(pod2)
    {
    hp2 = pod2.enemyHP;
    pod2.x = x + lengthdir_x(37,image_angle+135);
    pod2.y = y + lengthdir_y(37,image_angle+135);
    //pod2.image_angle = image_angle;
    pod2.image_alpha = image_alpha;
    }

if instance_exists(pod3)
    {
    hp3 = pod3.enemyHP;
    pod3.x = x + lengthdir_x(37,image_angle+225);
    pod3.y = y + lengthdir_y(37,image_angle+225);
    //pod3.image_angle = image_angle;
    pod3.image_alpha = image_alpha;
    }

if instance_exists(pod4)
    {
    hp4 = pod4.enemyHP;
    pod4.x = x + lengthdir_x(37,image_angle+315);
    pod4.y = y + lengthdir_y(37,image_angle+315);
    //pod4.image_angle = image_angle;
    pod4.image_alpha = image_alpha;
    }

enemyHP = hp1 + hp2 + hp3 + hp4;
// ^^ sets health ^^
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// aesthetics
image_angle += 0.5;

if x &lt; (320-33)-(sprite_width/2) &amp;&amp; neg = 0 then x += spd else neg = 1;
if x &gt; 33+(sprite_width/2) &amp;&amp; neg = 1 then x -= spd else neg = 0;

// phase control
switch phase
    {
    case 0:
        {
        if y &gt; yview-(sprite_height/2) &amp;&amp; made = 0
            {
            // creates attack pods
            pod1 = instance_create(x+24,y+24,obj_boss2_pod);
            pod2 = instance_create(x-24,y+24,obj_boss2_pod);
            pod3 = instance_create(x+24,y-24,obj_boss2_pod);
            pod4 = instance_create(x-24,y-24,obj_boss2_pod);
            scr_create_healthbar();
            made = 1;
            }
        timer += 1;
        if vspeed &gt; 0 then vspeed -= 0.0375;
        if timer = 200
            {
            timer = 0;
            phase = 1;
            }
        break;
        }
    case 1:
        {
        vspeed = 0;
        spd += 0.02;
        if spd = 1 then phase = 2;
        break;
        }
    case 2:
        {
        timer += 1;
        count = real(instance_number(obj_boss2_pod));
        if timer = (count * 12)
             {
             if instance_exists(pod1) then 
             with pod1 event_user(mode) else
             timer += (count * 12);
             }
        if timer = (count * 24)
             {
             if instance_exists(pod2) then 
             with pod2 event_user(mode) else
             timer += (count * 12);
             }
        if timer = (count * 36)
             {
             if instance_exists(pod3) then 
             with pod3 event_user(mode) else
             timer += (count * 12);
             }
        if timer = (count * 48)
             {
             if instance_exists(pod4) then 
             with pod4 event_user(mode) else
             timer += (count * 12);
             }
        if timer &gt; (count * 48) then timer = 0;
             
        timeout -= 1;
        if timeout &lt;= 0 then phase = 3;                  
        break;
        }
    case 3:
        {
        image_blend = c_white;
        if spd &gt; 0 then spd -= 0.02 else spd += 0.02;
        vspeed += 0.02;
        image_alpha -= 0.005;
        image_xscale += 0.0005;
        image_yscale += 0.0005;
        if y &gt; yview+320+(sprite_height/2) then instance_destroy();
        break;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// only happens if all 4 orbs are destroyed
if pods_killed = 4
    {
    if global.chain &gt;= 4 &amp;&amp; yview &lt; 2 
    then global.omake_enabled = 1;
    dead = instance_create(x,y,obj_boss2_dead);
    dead.image_angle = image_angle;
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
