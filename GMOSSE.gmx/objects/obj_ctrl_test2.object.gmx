<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ctrl_stage</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
TEST 2: Omnidirectional scrolling

This was quite some feat under obj_ctrl_screen
but is made very simple with obj_ctrl_camera as
the code is the same as for y values - as it should.
Very successful results. 

Will use for stage 4. Inspiration/example here:
https://www.youtube.com/watch?v=LHoxjcpgB4Y

Also used with working wobblescroll in all of the
Raiden Fighters games.

TODO: 
Do a better way of direction-to-speed conversion
(for easier coding of direction/speed changes)

Look into deactivation of enemies outside the view
- should we do this via the controller as we've been
doing or in obj_en_parent's End Step?
*/

direction = 90;
stage_time = 0;
global.level = 4; 
global.behaviour = 4; // determines behaviour of stars (if used)
global.gamecomplete = 0; // determines gameover/high score handling

scr_camera_init(320,0,-0.33);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = obj_ctrl_camera.x;
y = obj_ctrl_camera.y;

// Top half (left)
if direction = 90 &amp;&amp; y &lt; 160-spd_y
    {
    direction = 45;
    scr_camera_spd(0.33,-0.33);
    }
// Top half (center)
if direction = 45 &amp;&amp; y &lt; spd_y
    {
    direction = 315;
    scr_camera_spd(0.33,0.33);
    }
// Top half (right)
if direction = 315 &amp;&amp; x &gt; room_width-320-spd_x
    {
    direction = 270;
    scr_camera_spd(0,0.33);
    }
    
// Bottom half (right)
if direction = 270 &amp;&amp; y &gt; room_height-480-spd_y
    {
    direction = 225;
    scr_camera_spd(-0.33,0.33);
    }
// Bottom half (center)
if direction = 225 &amp;&amp; y &gt; room_height-320-spd_y
    {
    direction = 135;
    scr_camera_spd(-0.33,-0.33);
    }
    
// start moving to topleft
if direction = 135 &amp;&amp; x &lt; spd_x
    {
    direction = 90;
    scr_camera_spd(0,-0.33);
    }
    
instance_activate_region(-48,yview-48,368,368,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
