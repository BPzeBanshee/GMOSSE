<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_en7</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_en_air</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Compulsory
enemyHP = 120;//165; // Health
event_inherited();

// Misc. variables
phase = 0;
timer = 0;
thr_timer = 0;
atk_timer = 0;
made = 0;

// Definable vars
speed = 3.75;
move_with_bkg = 0;

event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if made
    {
    for (var i=0;i&lt;4;i++) {with tur[i] instance_destroy()};
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Update turret positions
event_user(0);
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Aesthetics/Thrusters
image_angle = direction;
var thr_aim = direction+180+irandom_range(-25,25);
var thr = scr_basicshot(x+lengthdir_x(18,direction+180),y,obj_en5_thr,5,thr_aim);
thr.image_xscale = 2;
thr.image_yscale = 2;
thr.image_angle = irandom(360);

// Pod control
if y &gt;= yview-(sprite_width/2) &amp;&amp; !made
    {
    for (var i=0;i&lt;4;i++)
        {
        tur[i] = instance_create(p[i,0],p[i,1],obj_en7_tur);
        tur[i].parent = (self).id;
        }
    made = 1;
    }

// Attack/Move pattern
if phase &gt; 0 then timer += 1;
if timer == 120 &amp;&amp; phase &lt; 3
    {
    if phase == 1 then phase = 2 else phase = 1; 
    timer = 0;
    }
    
switch phase
    {
    case 0: 
        {
        if y &gt; yview-(sprite_width/2) speed -= 0.1;
        if speed &lt;= 0.3 then phase = 1;
        break;
        }
    case 1: 
        {
        if y &gt; yview+240 then phase = 3;
        
        atk_timer += 1;
        if atk_timer == 30 &amp;&amp; made
            {
            for (var i=0;i&lt;4;i++) {with tur[i] event_user(1)};
            scr_playsnd(snd_en_shot4,1);
            atk_timer = 0;
            }
        break;
        }
    case 2: 
        {
        if y &gt; yview+240 then phase = 3;
        
        atk_timer += 1;
        if atk_timer == 4 &amp;&amp; made
            {
            for (var i=0;i&lt;4;i++) {with tur[i] event_user(2)};
            scr_playsnd(snd_en_shot1,1);
            atk_timer = 0;
            }
        break;
        }
    case 3: 
        {
        speed += 0.1;
        break;
        }
    }
    
// Death handling
if (x &lt; -sprite_width) || (x &gt; 320 + sprite_width) 
|| (y &gt; yview + 320 + sprite_height/2) 
then instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if made
    {
    for (var i=0;i&lt;4;i++)
        {
        with tur[i] visible = false;
        }
    }
if image_alpha == 1
    {
    scr_playsnd(snd_exp2,0);
    scr_addscore(800,180,1);
    }
var e = instance_create(x,y,obj_explosion);
e.direction = random(360);
e.speed = 2.5;

image_alpha -= 0.1;
image_xscale -= 0.1;
image_yscale -= 0.1;
if image_alpha &lt; 0.1
    {
    scr_create_exp(obj_explosion,360,18);
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Turret position updating
p[0,0] = x + lengthdir_x(17,direction-180) + lengthdir_x(7,direction-90);
p[0,1] = y + lengthdir_y(17,direction-180) + lengthdir_y(7,direction-90);

p[1,0] = x + lengthdir_x(17,direction-180) + lengthdir_x(7,direction+90);
p[1,1] = y + lengthdir_y(17,direction-180) + lengthdir_y(7,direction+90);

p[2,0] = x + lengthdir_x(7,direction) + lengthdir_x(7,direction-90);
p[2,1] = y + lengthdir_y(7,direction) + lengthdir_y(7,direction-90);

p[3,0] = x + lengthdir_x(7,direction) + lengthdir_x(7,direction+90);
p[3,1] = y + lengthdir_y(7,direction) + lengthdir_y(7,direction+90);

if made then for(var i=0; i&lt;4; i++)
    {
    tur[i].x = p[i,0];
    tur[i].y = p[i,1];
    } 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
