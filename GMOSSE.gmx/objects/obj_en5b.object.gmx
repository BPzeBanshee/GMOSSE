<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_en5b</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_en_air</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This is the health handling.
enemyHP = 20;
event_inherited();

// Misc. variables
if speed = 0 &amp;&amp; path_index = -1
    {
    direction = 270;
    speed = 5;
    }
shot_timer = 0;
thr_timer = 0;
num_of_shots = 5;
mode = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Aesthetics
image_angle = direction;

// Attack phases + entry and exit
switch mode
    {
    case 0: 
        { // Intro
        speed -= 0.1; 
        if speed = 0 then mode = 1; 
        break;
        }
    case 1:
        {
        // Attack pattern
        angle = point_direction(x,y,obj_hitbox.x,obj_hitbox.y);
        scr_turntoangle(angle,3);
        shot_timer += 1;
        if shot_timer = 30
            {
            scr_basicshot(x,y,obj_bullet3,4,direction); 
            scr_playsnd(snd_en_shot4,1);
            shot_timer = 0;
            num_of_shots -= 1;
            }
            
        // Timeout/Get the fuck out of the wall's way
        if num_of_shots = 0 then mode = 2;
        break;
        }
    case 2:
        { // Timeout
        if x &lt; 160
            {
            scr_turntoangle(180,3);
            speed += 0.05;
            if x &lt; xview-sprite_width then instance_destroy();
            }
        else
            {
            scr_turntoangle(0,3);
            speed += 0.05;
            if x &gt; xview+240+sprite_width then instance_destroy();
            }
        if y &gt; yview+320+sprite_height then instance_destroy();
        break;
        }
    }
    
// AESTHETICS //
x1 = x+lengthdir_x(10,direction+90)+lengthdir_x(14,direction+180); // left thruster (top-left of sprite)
y1 = y+lengthdir_y(10,direction+90)+lengthdir_y(14,direction+180);
x2 = x+lengthdir_x(10,direction+270)+lengthdir_x(14,direction+180); // right thruster (bottom-left of sprite)
y2 = y+lengthdir_y(10,direction+270)+lengthdir_y(14,direction+180);

thr_timer += 1;
if thr_timer = 5
    {
    scr_basicshot(x1,y1,obj_en5_thr,3,direction+180);
    scr_basicshot(x2,y2,obj_en5_thr,3,direction+180);
    thr_timer = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_addscore(100,180,1);
instance_create(x,y,obj_explosion);
scr_playsnd(snd_exp1,0);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
